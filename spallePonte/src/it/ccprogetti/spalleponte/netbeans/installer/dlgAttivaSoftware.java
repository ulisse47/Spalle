/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.ccprogetti.spalleponte.netbeans.installer;

import it.ccprogetti.activation.core.StartUpExt;
import java.awt.Cursor;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FilenameFilter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.nio.file.Files;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import org.openide.util.Exceptions;


/**
 *
 * @author Marco
 */
public class dlgAttivaSoftware extends javax.swing.JDialog {

    String code;

    /**
     * Creates new form dlgAttivaSoftware
     */
    public dlgAttivaSoftware(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jTextArea1.setLineWrap(true);
        try {
          
            
            InputStream is  = getClass().getResourceAsStream("/FEx/Termini.data");
           String result = getStringFromInputStream(is);

	/*	
            File destFile = new File( jasperPrint.getName() + ".rtf");
            
            
            String dir = System.getProperty("user.dir");
            String fTerm = dir + "/Termini.data";

            FileReader fr = new FileReader(fTerm);
            BufferedReader reader = new BufferedReader(fr);
            String line;
            while ((line = reader.readLine()) != null) {
                jTextArea1.append(line + "\n");
            }
*/
        jTextArea1.append(result);
        
        
           URL IMAGE_URL  = getClass().getResource("/FEx/CCP.png");
           ImageIcon icon= new ImageIcon(IMAGE_URL);
            Image img = icon.getImage(); 
            Image newimg = img.getScaledInstance(jlLogo.getWidth(), jlLogo.getHeight(),  java.awt.Image.SCALE_SMOOTH);
            icon = new ImageIcon(newimg);
            jlLogo.setIcon(icon);
            jlLogo.setText(null);

 
            URL IMAGE_URL2  = getClass().getResource("/FEx/CCPico.png");
           ImageIcon icon2= new ImageIcon(IMAGE_URL2);
            setIconImage(icon2.getImage());
           
        
 /*           String IMAGE_URL = dir + "/CCP.png";
            ImageIcon icon= new ImageIcon(IMAGE_URL);
            Image img = icon.getImage(); 
            Image newimg = img.getScaledInstance(jlLogo.getWidth(), jlLogo.getHeight(),  java.awt.Image.SCALE_SMOOTH);
            icon = new ImageIcon(newimg);
            jlLogo.setIcon(icon);
            jlLogo.setText(null);
            
            
            String IMAGE_ICO_URL = dir + "/CCPico.png";
            ImageIcon icon2= new ImageIcon(IMAGE_ICO_URL);
            setIconImage(icon2.getImage());
        */ 
        } catch (Exception ioe) {
            System.err.println(ioe);
        }

        
        
    }
    
    
    // convert InputStream to String
	private static String getStringFromInputStream(InputStream is) {

		BufferedReader br = null;
		StringBuilder sb = new StringBuilder();

		String line;
		try {

			br = new BufferedReader(new InputStreamReader(is, "UTF-8"));
			while ((line = br.readLine()) != null) {
				sb.append(line + "\n");
			}

		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (br != null) {
				try {
					br.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}

		return sb.toString();

	}
    

    public String showDialog() {
        setVisible(true);
        return code;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        ckAccetta = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        txtCodice = new javax.swing.JTextField();
        btAttiva = new javax.swing.JButton();
        btCancella = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lbl_Stato = new javax.swing.JTextField();
        btDemo = new javax.swing.JButton();
        jlLogo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.jLabel3.text")); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.title")); // NOI18N
        setBackground(new java.awt.Color(255, 255, 255));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        org.openide.awt.Mnemonics.setLocalizedText(ckAccetta, org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.ckAccetta.text")); // NOI18N
        ckAccetta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckAccettaActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.jLabel1.text")); // NOI18N

        txtCodice.setText(org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.txtCodice.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btAttiva, org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.btAttiva.text")); // NOI18N
        btAttiva.setEnabled(false);
        btAttiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAttivaActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btCancella, org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.btCancella.text")); // NOI18N
        btCancella.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancellaActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.jLabel2.text")); // NOI18N

        lbl_Stato.setEditable(false);
        lbl_Stato.setText(org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.lbl_Stato.text")); // NOI18N
        lbl_Stato.setBorder(null);

        org.openide.awt.Mnemonics.setLocalizedText(btDemo, org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.btDemo.text")); // NOI18N
        btDemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDemoActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jlLogo, org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.jlLogo.text")); // NOI18N
        jlLogo.setOpaque(true);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.jLabel4.text")); // NOI18N

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(dlgAttivaSoftware.class, "dlgAttivaSoftware.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(txtCodice, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btDemo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCancella)
                        .addGap(5, 5, 5)
                        .addComponent(btAttiva, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(ckAccetta))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_Stato))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jlLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ckAccetta)
                        .addGap(18, 18, 18)))
                .addComponent(txtCodice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_Stato, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btCancella)
                        .addComponent(btAttiva)
                        .addComponent(btDemo))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jButton1))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ckAccettaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckAccettaActionPerformed
        btAttiva.setEnabled(ckAccetta.isSelected());
    }//GEN-LAST:event_ckAccettaActionPerformed

    private void btAttivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAttivaActionPerformed
        code = txtCodice.getText();
        setVisible(false);
    }//GEN-LAST:event_btAttivaActionPerformed

    private void btCancellaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancellaActionPerformed
        code = null;
        setVisible(false);

    }//GEN-LAST:event_btCancellaActionPerformed

    private void btDemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDemoActionPerformed
        code = "demo";
        setVisible(false);
    }//GEN-LAST:event_btDemoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
           JFileChooser chooser;

        chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Directory di installazione");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //
        // disable the "All files" option.
        //
        chooser.setAcceptAllFileFilterUsed(false);
        //    
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File from = chooser.getSelectedFile();

            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            File file = cercaFile(from, "Maya.data");
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

            if (file != null) {
                JOptionPane.showMessageDialog(this, "File attivazione trovato");
                File dest = new File(System.getProperty("user.dir") + "\\Maya.data");

                try {
                    if (dest.exists()) {
                        dest.delete();
                    }
                    Files.copy(file.toPath(), dest.toPath());

                    int exitValue = StartUpExt.getInstance().verifyLocalActivation();
                    if (exitValue == StartUpExt.LOCAL_REGIGESTERED) {
                        code = "findNewMaya";
                        setVisible(false);
                    } else {
                        JOptionPane.showMessageDialog(this, "Il file di attivazione trovato non è valido");
                        return;
                    }

                } catch (IOException ex) {
                    Exceptions.printStackTrace(ex);
                    JOptionPane.showMessageDialog(this, "Attivazione non riuscita" + "/n" + ex);
                }

            } else {
                JOptionPane.showMessageDialog(this, "File attivazione non trovato!");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void setStato(String stato) {
        lbl_Stato.setText(stato);
    }

     public File cercaFile(File from, String nome) {
        //utilizziamo per la ricerca un filtro
        // create new filename filter
        File original = new File(System.getProperty("user.dir") + "\\Maya.data");

        File fl;
        File[] files = from.listFiles(new Filter(nome));

        //stampiamo su ogni riga i file trovati
        //se noi volessimo stampare il percorso completo potremmo usare
        //pw.println((++count + \" \" + files.getAbsolutePath()));
        for (File file : files) {
            if (file.isFile()) {
                String fname = file.getName();
                if (fname.toUpperCase().equals(nome.toUpperCase())
                        && !original.getAbsolutePath().equals(file.getAbsolutePath())) {
                    return file;
                }
            } else {
                fl = cercaFile(file, nome);
                if (fl != null) {
                    return fl;
                }

            }
        }

        return null;
    }

    class Filter implements FilenameFilter {
        //estensione del file

        private String nome;

        public Filter(String nome) {
            this.nome = nome;
        }

        //accettiamo tutti i file con estensione s e le directory che non siano
        //nascoste
        public boolean accept(File dir, String file) {
            File f = new File(dir, file);

            boolean flag = true;
            if (nome != null && nome != "\\") {
                flag = file.toUpperCase().indexOf(nome.toUpperCase()) != -1;
            }

            return (flag || f.isDirectory()) && !f.isHidden();

        }
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dlgAttivaSoftware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dlgAttivaSoftware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dlgAttivaSoftware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dlgAttivaSoftware.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dlgAttivaSoftware dialog = new dlgAttivaSoftware(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAttiva;
    private javax.swing.JButton btCancella;
    private javax.swing.JButton btDemo;
    private javax.swing.JCheckBox ckAccetta;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel jlLogo;
    private javax.swing.JTextField lbl_Stato;
    private javax.swing.JTextField txtCodice;
    // End of variables declaration//GEN-END:variables
}
